<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<groupId>com.carrotgarden</groupId>
	<artifactId>carrot-archon</artifactId>
	<version>1.0.21</version>
	<packaging>pom</packaging>

	<name>${project.artifactId}</name>
	<description>${project.artifactId} experimental libraries</description>
	<inceptionYear>2011</inceptionYear>

	<organization>
		<name>carrotgarden</name>
		<url>http://www.carrotgarden.com/</url>
	</organization>

	<licenses>
		<license>
			<name>The BSD License</name>
			<url>http://www.opensource.org/licenses/bsd-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>

		<developer>
			<id>Andrei.Pozolotin</id>
			<name>Andrei Pozolotin</name>
			<email>Andrei dot Pozolotin at gmail dot com</email>
			<roles>
				<role>owner</role>
			</roles>
			<properties>
				<credits>the gardener</credits>
			</properties>
		</developer>

	</developers>

	<scm>
		<url>https://github.com/carrot-garden/carrot-archon</url>
		<connection>scm:git:git://github.com/carrot-garden/carrot-archon.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/carrot-garden/carrot-archon.git</developerConnection>
	</scm>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<carrotJavaVersion>1.6</carrotJavaVersion>
		<carrotMavenVersion>3.0.3</carrotMavenVersion>

	</properties>

	<modules>
	</modules>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>osgi_R4_core</artifactId>
				<version>1.0</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>osgi_R4_compendium</artifactId>
				<version>1.0</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.scr.annotations</artifactId>
				<version>1.5.0</version>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.1</version>
				<scope>compile</scope>
				<optional>false</optional>
			</dependency>

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>1.6.2</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>0.9.28</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.8.1</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>5.14</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>3.0</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- MAIN -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- TEST -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<pluginManagement>

			<plugins>

				<plugin>
					<groupId>org.apache.karaf.tooling</groupId>
					<artifactId>features-maven-plugin</artifactId>
					<version>2.2.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-scr-plugin</artifactId>
					<version>1.7.0</version>
					<executions>
						<execution>
							<id>scr</id>
							<goals>
								<goal>scr</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.3.4</version>
					<extensions>true</extensions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>

				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>2.2</version>
				</plugin>

				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.6</version>
				</plugin>

				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.5</version>
				</plugin>

				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.2.1</version>
				</plugin>

				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.4.1</version>
				</plugin>

				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>${carrotJavaVersion}</source>
						<target>${carrotJavaVersion}</target>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.8</version>
					<configuration>
						<buildcommands>
							<buildcommand>org.eclipse.jdt.core.javabuilder</buildcommand>
							<buildcommand>org.maven.ide.eclipse.maven2Builder</buildcommand>
						</buildcommands>
						<projectnatures>
							<projectnature>org.eclipse.jdt.core.javanature</projectnature>
							<projectnature>org.maven.ide.eclipse.maven2Nature</projectnature>
						</projectnatures>
						<classpathContainers>
							<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
							<classpathContainer>org.maven.ide.eclipse.MAVEN2_CLASSPATH_CONTAINER</classpathContainer>
						</classpathContainers>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-enforcer-plugin</artifactId>
					<executions>
						<execution>
							<!-- override parent -->
							<id>enforce-maven</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>${carrotMavenVersion}</version>
										<message><![CDATA[you must run mavenVersion=${carrotMavenVersion}]]></message>
									</requireMavenVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<!-- generate javadoc -->
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<quiet>true</quiet>
						<verbose>false</verbose>
						<links>
							<show>public</show>
							<link>http://java.sun.com/javase/1.6.0/docs/api</link>
						</links>
						<linksource>true</linksource>
						<detectLinks>true</detectLinks>
						<windowtitle>${project.name} API ${project.version} /
							${maven.build.timestamp}</windowtitle>
						<doctitle>${project.name} API ${project.version} /
							${maven.build.timestamp}</doctitle>
						<header><![CDATA[<a href="${project.organization.url}" target="_blank">${project.organization.name}</a>]]></header>
						<footer><![CDATA[<a href="${project.organization.url}" target="_blank">${project.organization.name}</a>]]></footer>
						<bottom>
							<!-- note: these "years" are internal javadoc plugin tags -->
							Copyright Â© {inceptionYear}-{currentYear}
						<![CDATA[<a href="${project.organization.url}" target="_blank">${project.organization.name}</a>]]>.
							All Rights Reserved.
						</bottom>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
					<configuration>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>groovy-maven-plugin</artifactId>
					<version>1.0</version>
				</plugin>


				<!-- enable both junit and testng -->
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.7.2</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit47</artifactId>
							<version>2.7.2</version>
						</dependency>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-testng</artifactId>
							<version>2.7.2</version>
						</dependency>
					</dependencies>
				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>

			<!-- enforce java version -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<!-- enforce maven version -->
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<!-- generate javadoc -->
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>

			<!-- generate source -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<!-- setup custom properties -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>setup-custom-properties</id>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
							<![CDATA[
								//
								import java.text.MessageFormat;
								//
								carrotTimeLong = System.currentTimeMillis();
								project.properties["carrotTimeLong"] = carrotTimeLong;
								println("### carrotTimeLong=" + carrotTimeLong);
								//
								carrotTimeFile = MessageFormat.format("{0,date,yyyy-MM-dd_HH-mm-ss}",carrotTimeLong);
								project.properties["carrotTimeFile"] = carrotTimeFile;
								println("### carrotTimeFile=" + carrotTimeFile);
								//
								carrotTimeISO=MessageFormat.format("{0,date,yyyy-MM-dd'T'HH:mm:ss.SSSZ}",carrotTimeLong);
								project.properties["carrotTimeISO"] = carrotTimeISO;
								println("### carrotTimeISO=" + carrotTimeISO);
								//
								carrotTimeJnlp=MessageFormat.format("{0,date,'TS: 'yyyy-MM-dd' 'HH:mm:ss' 'Z}",carrotTimeLong);
								project.properties["carrotTimeJnlp"] = carrotTimeJnlp;
								println("### carrotTimeJnlp=" + carrotTimeJnlp);
								//
							]]>
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- release to sonaytype staging repo -->
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<!-- used by release:prepare -->
					<preparationGoals>clean verify</preparationGoals>
					<!-- used by release:perform -->
					<goals>deploy</goals>
				</configuration>
			</plugin>

			<!-- always produce osgi bundle manifest -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
			</plugin>

		</plugins>

	</build>

	<profiles>

		<profile>

			<id>carrot-release</id>

			<build>

				<plugins>


				</plugins>

			</build>

		</profile>

	</profiles>

</project>
