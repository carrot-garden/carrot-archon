<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<groupId>com.carrotgarden.base</groupId>
	<artifactId>carrot-archon</artifactId>
	<version>1.1.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<url>http://www.carrotgarden.com/</url>
	<name>${project.artifactId}</name>
	<description>${project.artifactId}</description>
	<inceptionYear>2010</inceptionYear>

	<organization>
		<name>carrotgarden</name>
		<url>http://www.carrotgarden.com/</url>
	</organization>

	<licenses>
		<license>
			<name>The BSD License</name>
			<url>http://www.opensource.org/licenses/bsd-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>

		<developer>
			<id>Andrei.Pozolotin</id>
			<name>Andrei Pozolotin</name>
			<email>Andrei.Pozolotin@carrotgarden.com</email>
			<roles>
				<role>gardener</role>
			</roles>
			<properties>
				<credits>gardens carrots</credits>
			</properties>
		</developer>

	</developers>

	<scm>
		<url>https://github.com/carrot-garden/carrot-archon</url>
		<connection>scm:git:git://github.com/carrot-garden/carrot-archon.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/carrot-garden/carrot-archon.git</developerConnection>
	</scm>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<carrotJavaVersion>1.7</carrotJavaVersion>
		<carrotScalaVersion>2.9.1</carrotScalaVersion>
		<carrotMavenVersion>3.0.3</carrotMavenVersion>

		<amazonActiveRepo>activate-via-profile</amazonActiveRepo>
		<amazonReleaseRepo>repository.carrotgarden.com</amazonReleaseRepo>
		<amazonStagingRepo>repository-dev.carrotgarden.com</amazonStagingRepo>

	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- MAIN -->

			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${carrotScalaVersion}</version>
			</dependency>

			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>4.3.0</version>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>4.2.0</version>
			</dependency>

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.0</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.4</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>1.0.0</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.0.0</version>
			</dependency>

			<!-- TEST -->

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.10</version>
			</dependency>

			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>6.4</version>
			</dependency>

			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>3.1</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<extensions>

			<extension>
				<groupId>org.kuali.maven.wagons</groupId>
				<artifactId>maven-s3-wagon</artifactId>
				<version>1.1.10</version>
			</extension>

		</extensions>

		<pluginManagement>

			<plugins>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>2.1.1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.4</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.7</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-patch-plugin</artifactId>
					<version>1.1.1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>1.6</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.5</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.3</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.4.1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>${carrotJavaVersion}</source>
						<target>${carrotJavaVersion}</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.9</version>
					<configuration>
						<!-- <buildcommands> -->
						<!-- <buildcommand>org.eclipse.jdt.core.javabuilder</buildcommand> -->
						<!-- <buildcommand>org.maven.ide.eclipse.maven2Builder</buildcommand> -->
						<!-- </buildcommands> -->
						<!-- <projectnatures> -->
						<!-- <projectnature>org.eclipse.jdt.core.javanature</projectnature> -->
						<!-- <projectnature>org.maven.ide.eclipse.maven2Nature</projectnature> -->
						<!-- </projectnatures> -->
						<!-- <classpathContainers> -->
						<!-- <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer> -->
						<!-- <classpathContainer>org.maven.ide.eclipse.MAVEN2_CLASSPATH_CONTAINER</classpathContainer> -->
						<!-- </classpathContainers> -->
					</configuration>
				</plugin>

				<!-- override sonatype parent; 2.2.2 is broken -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.2.1</version>
				</plugin>

				<!-- override sonatype parent -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.0.1</version>
					<executions>
						<execution>
							<id>enforce-maven</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>${carrotMavenVersion}</version>
										<message><![CDATA[you must run mavenVersion >= ${carrotMavenVersion}]]></message>
									</requireMavenVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.8.1</version>
					<configuration>
						<quiet>true</quiet>
						<verbose>false</verbose>
						<links>
							<show>public</show>
							<link>http://docs.oracle.com/javase/6/docs/api/</link>
						</links>
						<linksource>true</linksource>
						<detectLinks>true</detectLinks>
						<windowtitle>${project.name} API ${project.version} /
							${maven.build.timestamp}</windowtitle>
						<doctitle>${project.name} API ${project.version} /
							${maven.build.timestamp}</doctitle>
						<header><![CDATA[<a href="${project.organization.url}" target="_blank">${project.organization.name}</a>]]></header>
						<footer><![CDATA[<a href="${project.organization.url}" target="_blank">${project.organization.name}</a>]]></footer>
						<bottom>
							<!-- note: these "years" are internal maven-javadoc-plugin tags -->
							Copyright Â© {inceptionYear}-{currentYear}
						<![CDATA[<a href="${project.organization.url}" target="_blank">${project.organization.name}</a>]]>.
							All Rights Reserved.
						</bottom>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
					<configuration>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>groovy-maven-plugin</artifactId>
					<version>1.4</version>
				</plugin>

				<!-- support both junit and testng -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.12</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit4</artifactId>
							<version>2.12</version>
						</dependency>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-testng</artifactId>
							<version>2.12</version>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.3.7</version>
				</plugin>

				<plugin>
					<groupId>org.scala-tools</groupId>
					<artifactId>maven-scala-plugin</artifactId>
					<version>2.15.2</version>
					<configuration>
						<scalaVersion>${carrotScalaVersion}</scalaVersion>
						<sendJavaToScalac>false</sendJavaToScalac>
						<checkMultipleScalaVersions>false</checkMultipleScalaVersions>
						<jvmArgs>
							<jvmArg>-Xms64m</jvmArg>
							<jvmArg>-Xmx1024m</jvmArg>
						</jvmArgs>
					</configuration>
					<executions>
						<!-- compile java first, scala second -->
						<execution>
							<goals>
								<goal>add-source</goal>
								<goal>compile</goal>
								<goal>testCompile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>groovy-maven-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>

			<!-- enforce maven version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<!-- enforce java version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<!-- setup custom properties -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>setup-custom-properties</id>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
		<![CDATA[
		//
		import java.text.MessageFormat;
		//
		carrotTimeLong = System.currentTimeMillis();
		project.properties["carrotTimeLong"] = carrotTimeLong;
		println("### carrotTimeLong=" + carrotTimeLong);
		//
		carrotTimeFile = MessageFormat.format("{0,date,yyyy-MM-dd_HH-mm-ss}",carrotTimeLong);
		project.properties["carrotTimeFile"] = carrotTimeFile;
		println("### carrotTimeFile=" + carrotTimeFile);
		//
		carrotTimeISO=MessageFormat.format("{0,date,yyyy-MM-dd'T'HH:mm:ss.SSSZ}",carrotTimeLong);
		project.properties["carrotTimeISO"] = carrotTimeISO;
		println("### carrotTimeISO=" + carrotTimeISO);
		//
		]]>
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- release defaults -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<!-- used by release:prepare -->
					<preparationGoals>clean verify</preparationGoals>
					<!-- used by release:perform -->
					<goals>deploy</goals>
					<!-- nested invocation arguments -->
					<arguments>-P release</arguments>
				</configuration>
			</plugin>

			<!-- always produce osgi bundle manifest -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>

		</plugins>

	</build>

	<profiles>

		<profile>
			<id>amazon-release</id>
			<properties>
				<amazonActiveRepo>${amazonReleaseRepo}</amazonActiveRepo>
			</properties>
		</profile>
		<profile>
			<id>amazon-staging</id>
			<properties>
				<amazonActiveRepo>${amazonStagingRepo}</amazonActiveRepo>
			</properties>
		</profile>

		<profile>
			<id>carrot-distribution</id>
			<distributionManagement>
				<repository>
					<id>com.carrotgarden.maven.s3.release</id>
					<url>s3://${amazonReleaseRepo}/maven</url>
				</repository>
				<snapshotRepository>
					<id>com.carrotgarden.maven.s3.staging</id>
					<url>s3://${amazonStagingRepo}/maven</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>
		<profile>
			<id>carrot-repository</id>
			<activation>
				<file>
					<exists>.carrot</exists>
				</file>
			</activation>
			<properties>
				<amazonBucketHost>s3.amazonaws.com</amazonBucketHost>
			</properties>
			<repositories>
				<repository>
					<id>com.carrotgarden.maven.http.release</id>
					<url>https://${amazonBucketHost}/${amazonReleaseRepo}/maven</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
				<repository>
					<id>com.carrotgarden.maven.http.staging</id>
					<url>https://${amazonBucketHost}/${amazonStagingRepo}/maven</url>
					<releases>
						<enabled>false</enabled>
					</releases>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</repository>
			</repositories>
		</profile>

		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<!-- repository where staging promotion will go, this repository is synced 
		to The Central Repository -->
	<repositories>
		<repository>
			<id>sonatype-nexus-releases</id>
			<name>Sonatype Nexus Releases</name>
			<url>https://oss.sonatype.org/content/repositories/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

</project>
